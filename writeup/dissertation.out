\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Golden Age}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Cheating the System}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{Hello, Parallelism}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{Parallelising Compilers}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{Contributions}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{Outline}{chapter.1}% 7
\BOOKMARK [0][-]{chapter.2}{Related Work}{}% 8
\BOOKMARK [1][-]{section.2.1}{Dynamic Parallelism and Parallelism Extraction}{chapter.2}% 9
\BOOKMARK [1][-]{section.2.2}{Instrumentation}{chapter.2}% 10
\BOOKMARK [2][-]{subsection.2.2.1}{Bytecode Instrumentation}{section.2.2}% 11
\BOOKMARK [3][-]{subsubsection.2.2.1.1}{Java Agents}{subsection.2.2.1}% 12
\BOOKMARK [3][-]{subsubsection.2.2.1.2}{ASM}{subsection.2.2.1}% 13
\BOOKMARK [3][-]{subsubsection.2.2.1.3}{Javassist}{subsection.2.2.1}% 14
\BOOKMARK [2][-]{subsection.2.2.2}{Aspect-Oriented Programming}{section.2.2}% 15
\BOOKMARK [2][-]{subsection.2.2.3}{AspectJ/ABC}{section.2.2}% 16
\BOOKMARK [3][-]{subsubsection.2.2.3.1}{Array and Loop Pointcuts}{subsection.2.2.3}% 17
\BOOKMARK [2][-]{subsection.2.2.4}{Hybrid Models}{section.2.2}% 18
\BOOKMARK [3][-]{subsubsection.2.2.4.1}{DiSL}{subsection.2.2.4}% 19
\BOOKMARK [3][-]{subsubsection.2.2.4.2}{Turbo DiSL}{subsection.2.2.4}% 20
\BOOKMARK [1][-]{section.2.3}{Summary}{chapter.2}% 21
\BOOKMARK [0][-]{chapter.3}{The Graal Compiler Infrastructure}{}% 22
\BOOKMARK [1][-]{section.3.1}{Background}{chapter.3}% 23
\BOOKMARK [1][-]{section.3.2}{Introduction}{chapter.3}% 24
\BOOKMARK [1][-]{section.3.3}{Intermediate Representations}{chapter.3}% 25
\BOOKMARK [1][-]{section.3.4}{Graph Transformations}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.4.1}{The .class File Format - Constant Pools}{section.3.4}% 27
\BOOKMARK [1][-]{section.3.5}{Snippets}{chapter.3}% 28
\BOOKMARK [1][-]{section.3.6}{Replacements}{chapter.3}% 29
\BOOKMARK [1][-]{section.3.7}{Optimisations and Deoptimisations}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.8}{Summary}{chapter.3}% 31
\BOOKMARK [0][-]{chapter.4}{Dynamic Instrumentation}{}% 32
\BOOKMARK [1][-]{section.4.1}{Introduction}{chapter.4}% 33
\BOOKMARK [1][-]{section.4.2}{Automatic Approaches}{chapter.4}% 34
\BOOKMARK [2][-]{subsection.4.2.1}{Graal}{section.4.2}% 35
\BOOKMARK [1][-]{section.4.3}{Manual Approaches}{chapter.4}% 36
\BOOKMARK [1][-]{section.4.4}{Summary}{chapter.4}% 37
\BOOKMARK [0][-]{chapter.5}{The Runtime Library}{}% 38
\BOOKMARK [1][-]{section.5.1}{Introduction}{chapter.5}% 39
\BOOKMARK [1][-]{section.5.2}{Trace Storage}{chapter.5}% 40
\BOOKMARK [2][-]{subsection.5.2.1}{Exact Approaches: Hash Tables and Sets}{section.5.2}% 41
\BOOKMARK [2][-]{subsection.5.2.2}{Probabilistic Approaches: Bloom Filters}{section.5.2}% 42
\BOOKMARK [3][-]{subsubsection.5.2.2.1}{Implementations}{subsection.5.2.2}% 43
\BOOKMARK [1][-]{section.5.3}{Dependency Analysis Algorithms}{chapter.5}% 44
\BOOKMARK [2][-]{subsection.5.3.1}{Why are dependencies important?}{section.5.3}% 45
\BOOKMARK [2][-]{subsection.5.3.2}{Dependency Theory}{section.5.3}% 46
\BOOKMARK [2][-]{subsection.5.3.3}{Offline Algorithms}{section.5.3}% 47
\BOOKMARK [2][-]{subsection.5.3.4}{Online Algorithns}{section.5.3}% 48
\BOOKMARK [1][-]{section.5.4}{Implementation Details}{chapter.5}% 49
\BOOKMARK [2][-]{subsection.5.4.1}{Entry Point}{section.5.4}% 50
\BOOKMARK [2][-]{subsection.5.4.2}{Instrument Implementation}{section.5.4}% 51
\BOOKMARK [3][-]{subsubsection.5.4.2.1}{Java Auto\(un\)boxing}{subsection.5.4.2}% 52
\BOOKMARK [2][-]{subsection.5.4.3}{Trace Storage and Configuration}{section.5.4}% 53
\BOOKMARK [3][-]{subsubsection.5.4.3.1}{Exact - Hash Set}{subsection.5.4.3}% 54
\BOOKMARK [3][-]{subsubsection.5.4.3.2}{Inexact - Bloom Filters}{subsection.5.4.3}% 55
\BOOKMARK [1][-]{section.5.5}{Summary}{chapter.5}% 56
\BOOKMARK [0][-]{chapter.6}{Methodology}{}% 57
\BOOKMARK [1][-]{section.6.1}{Introduction}{chapter.6}% 58
\BOOKMARK [1][-]{section.6.2}{Experimental Setup}{chapter.6}% 59
\BOOKMARK [1][-]{section.6.3}{Repeats}{chapter.6}% 60
\BOOKMARK [1][-]{section.6.4}{Measurement Methodology}{chapter.6}% 61
\BOOKMARK [2][-]{subsection.6.4.1}{Execution Time}{section.6.4}% 62
\BOOKMARK [2][-]{subsection.6.4.2}{Dependencies}{section.6.4}% 63
\BOOKMARK [2][-]{subsection.6.4.3}{Memory Usage}{section.6.4}% 64
\BOOKMARK [1][-]{section.6.5}{Parametric Benchmarks}{chapter.6}% 65
\BOOKMARK [2][-]{subsection.6.5.1}{Motivation}{section.6.5}% 66
\BOOKMARK [2][-]{subsection.6.5.2}{Problem Statement}{section.6.5}% 67
\BOOKMARK [2][-]{subsection.6.5.3}{Algorithm Design}{section.6.5}% 68
\BOOKMARK [3][-]{subsubsection.6.5.3.1}{Generating b}{subsection.6.5.3}% 69
\BOOKMARK [3][-]{subsubsection.6.5.3.2}{Generating ops}{subsection.6.5.3}% 70
\BOOKMARK [2][-]{subsection.6.5.4}{Implementation Details}{section.6.5}% 71
\BOOKMARK [1][-]{section.6.6}{Test Harness Design and Implementation}{chapter.6}% 72
\BOOKMARK [1][-]{section.6.7}{Result Collection}{chapter.6}% 73
\BOOKMARK [1][-]{section.6.8}{Summary}{chapter.6}% 74
\BOOKMARK [0][-]{chapter.7}{Results}{}% 75
\BOOKMARK [1][-]{section.7.1}{Introduction}{chapter.7}% 76
\BOOKMARK [1][-]{section.7.2}{Bloom filter implementations}{chapter.7}% 77
\BOOKMARK [1][-]{section.7.3}{All Dependent}{chapter.7}% 78
\BOOKMARK [2][-]{subsection.7.3.1}{Dependency Detection}{section.7.3}% 79
\BOOKMARK [2][-]{subsection.7.3.2}{Memory Usage}{section.7.3}% 80
\BOOKMARK [2][-]{subsection.7.3.3}{Execution Time}{section.7.3}% 81
\BOOKMARK [1][-]{section.7.4}{No Dependencies}{chapter.7}% 82
\BOOKMARK [2][-]{subsection.7.4.1}{Dependency Detection}{section.7.4}% 83
\BOOKMARK [2][-]{subsection.7.4.2}{Memory Usage}{section.7.4}% 84
\BOOKMARK [2][-]{subsection.7.4.3}{Execution Time}{section.7.4}% 85
\BOOKMARK [1][-]{section.7.5}{20\045 Dependent}{chapter.7}% 86
\BOOKMARK [2][-]{subsection.7.5.1}{Dependency Detection}{section.7.5}% 87
\BOOKMARK [2][-]{subsection.7.5.2}{Memory Usage}{section.7.5}% 88
\BOOKMARK [2][-]{subsection.7.5.3}{Execution Time}{section.7.5}% 89
\BOOKMARK [1][-]{section.7.6}{40\045 Dependent}{chapter.7}% 90
\BOOKMARK [2][-]{subsection.7.6.1}{Dependency Detection}{section.7.6}% 91
\BOOKMARK [2][-]{subsection.7.6.2}{Memory Usage}{section.7.6}% 92
\BOOKMARK [2][-]{subsection.7.6.3}{Execution Time}{section.7.6}% 93
\BOOKMARK [1][-]{section.7.7}{60\045 Dependent}{chapter.7}% 94
\BOOKMARK [2][-]{subsection.7.7.1}{Dependency Detection}{section.7.7}% 95
\BOOKMARK [2][-]{subsection.7.7.2}{Memory Usage}{section.7.7}% 96
\BOOKMARK [2][-]{subsection.7.7.3}{Execution Time}{section.7.7}% 97
\BOOKMARK [1][-]{section.7.8}{80\045 Dependent}{chapter.7}% 98
\BOOKMARK [2][-]{subsection.7.8.1}{Dependency Detection}{section.7.8}% 99
\BOOKMARK [2][-]{subsection.7.8.2}{Memory Usage}{section.7.8}% 100
\BOOKMARK [2][-]{subsection.7.8.3}{Execution Time}{section.7.8}% 101
\BOOKMARK [1][-]{section.7.9}{General Remarks}{chapter.7}% 102
\BOOKMARK [1][-]{section.7.10}{Optimal Configuration for Bloom Filters}{chapter.7}% 103
\BOOKMARK [0][-]{chapter.8}{Conclusion}{}% 104
\BOOKMARK [1][-]{section.8.1}{Concluding Remarks and Contributions}{chapter.8}% 105
\BOOKMARK [1][-]{section.8.2}{Unsolved Problems}{chapter.8}% 106
\BOOKMARK [1][-]{section.8.3}{Future Work}{chapter.8}% 107
\BOOKMARK [0][-]{chapter*.33}{Bibliography}{}% 108
